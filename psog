local CONFIG = {
    TARGET_ITEMS = {
        ["Huge Piggy"] = { cost = "100%", resell = "100%" },
        -- Add more items here if needed
    }
}

-- Fetch RAP data
local function fetchRAPData()
    local success, response = pcall(function()
        local apiResponse = game:HttpGet("https://petsgo.biggamesapi.io/api/rap")
        return HttpService:JSONDecode(apiResponse)
    end)

    if success and response and response.data then
        return response
    else
        warn("⚠️ Failed to fetch RAP data!")
        return nil
    end
end

-- Function to get RAP value for a specific pet
local function getRAPValue(petName, rapData)
    for _, pet in ipairs(rapData.data) do
        if pet.configData.id == petName then
            return pet.value  -- Return RAP value if found
        end
    end
    return nil  -- Return nil if pet not found
end

-- Function to calculate the adjusted cost based on the RAP value and percentage
local function getAdjustedCost(petName, originalCost, rapData)
    if type(originalCost) == "string" and originalCost:match("%%$") then
        local percentage = tonumber(originalCost:match("(%d+)")) / 100
        local rapValue = getRAPValue(petName, rapData)
        
        if rapValue then
            print("RAP Value for " .. petName .. ": " .. rapValue) -- Print the RAP value
            return math.floor(rapValue * percentage)  -- Apply the percentage to the RAP value
        else
            warn("⚠️ Missing RAP data for:", petName)
            return nil
        end
    end

    return originalCost -- Return the original cost if it's not a percentage
end

-- Main function to print adjusted costs
local function printAdjustedCosts()
    local rapData = fetchRAPData()
    if rapData then
        for petName, petInfo in pairs(CONFIG.TARGET_ITEMS) do
            -- Access the cost correctly from the petInfo table
            local adjustedCost = getAdjustedCost(petName, petInfo.cost, rapData)
            if adjustedCost then
                print("Adjusted cost for " .. petName .. ": " .. adjustedCost)
            end
        end
    end
end

-- Call the main function to print adjusted costs
printAdjustedCosts()
